#include "NoaEngine.h"

//”Œœ∑Ã˘Õº–≈œ¢

//«Ω±⁄Ã˘Õº
Uint32 wall1Color[] =
{

	8029323,3885139,11646650,9410717,6582651,12698823,12436680,9279134,6580074,4738644,8291723,
	9606811,5726828,6976378,7304055,4674913,8422794,6579559,6383983,8291722,4542297,6450292,
	8224641,4213071,10331305,11185841,8226445,10331047,7765379,7569030,11252148,9344668,6384756,
	3753553,11252149,9476254,5727599,13356495,11515322,8095375,7698296,5067351,6844792,8685451,
	4411482,7107707,8027778,5069927,7961986,5856094,4871003,8225929,4476761,6845307,7435382,
	3818572,10791600,11383220,9673633,10462376,8357257,6451064,10923184,10331305,5726569,3885138,
	11186355,10397097,5135720,12106944,10002855,8358033,6974318,3423041,6844534,8685708,3819088,
	7370364,8290693,4082775,7896193,6053988,5199967,9606810,5068641,6121842,7830396,4607831,10660012,
	8686223,8686740,10331048,7897222,5858927,11054512,9936546,6121326,4806240,10331820,11976386,9345440,
	10593962,9673633,9871012,8225671,5594210,8949139,7633278,4279123,7042172,6121327,4477276,10199460,
	7961470,6449776,10660014,5661294,7174015,7895675,4015951,10989235,11449269,9739683,10331046,6384497,
	6517114,11383991,9739426,8884373,5398119,8358031,9739168,9410462,11251634,8357773,9016476,
	11975615,11515578,11251892,7303799,3489609,8227216,13291216,11384251,11514549,6316646,5199711,
	12239045,12370632,10923185,6251109,4213072,10068389,11383476,10134183,10528167,6187118,7174274,
	11514806,10133412,7766150,4608346,6318447,3950158,2635328,9936546,9542046,8950425,9409687,
	7042942,8555410,7566970,2700607,9146517,14935269,8293270,7962244,6514024,4871002,12698821,
	10265513,8029068,7040624,4936796,8291723,5725794,5397861,10396583,6647412,7240065,8553864,
	6382697,5068896,4279380,6976121,3621451,3884879,11120306,9804705,7503496,9936030,7239807,
	7437445,6975090,2765886,8686223,13488338,6846852,7633537,6250595,5396575,11712443,8555412,
	8029066,6975088,5593954,7042427,4936536,6318447,10857646,6384240,5463653,7896448,5725537,
	5331297,4345173,6450547,4278865,4739675,11712184,8949910,8161425,9870238,6976635,6779256,
	6843761,2502970,8620432,13027273,7043203,7830401,5198164,4805208,11843772,9146776,7437188,
	7698298,5133660,6318962,5659745,5726568,10528682,6318191,6056047,7698555,5133401,5661032,
	4279638,6515827,4278350,3884880,10725548,9475740,9015963,9212309,6056306,7305601,7040626,
	2305593,9344667,12632771,6056307,7896450,5724250,5068381,12106943,7634051,7240066,8882827,
	4936796,6516085,5725537,5463909,10002082,7173499,7568773,6909040,6119782,6450291,4805984,
	6515312,4278350,4476760,8752274,8225673,8621460,9212308,5924719,8226703,6514541,2174264,
	9147031,12106685,5398377,7633535,6842475,6383727,11449271,7699845,7897738,8356227,5397603,
	7831429,4804693,5661032,11251891,7436413,6121069,6448746,6975347,7502980,7239809,7501434,
	4015179,4410454,10988978,8753047,9936805,8883344,5990255,8555408,8093571,5594726,10462376,
	11185584,5398121,8686997,10264997,9541789,10199203,8489360,8292752,10593961,9739169,8554380,
	4936280,5331812,12698822,10725548,9738913,7895677,5527902,7304054,6844793,7830657,3094334,
	4344916,12172737,8752790,8292754,9278359,5134688,6515570,8618885,4804694,10857392,11514549,
	6056822,8950424,8949651,7766408,10659241,9344668,8884890,11646135,7240065,6449521,4739157,
	5068639,14211546,12567495,8621977,7764092,5725025,7106675,5332067,6909813,3160126,4476245,
	11054771,9410461,8029582,9212308,5200482,7107964,7566968,3555400,10528685,11843513,7569546,
	8621459,8685965,6253685,10856877,8292238,8950684,11251634,6516343,7107705,4475729,4937053,
	13356752,10200233,8161169,7566713,6514540,6843246,5594724,6646898,3422784,4147280,12107459,
	9213340,8424341,8357257,6384755,8358032,7304054,4213329,11054770,12041149,7437703,8423823,
	8752014,6187635,10725547,8818325,9476513,10331303,6385271,7501949,4672851,4344916,13554132,
	10791600,9147547,8619399,6317162,6317417,6581619,6449263,1778731,3160901,12370373,10133670,
	8555926,9409687,6121325,7765637,8093055,4147280,10462635,11514549,7043459,8489615,7568513,
	6516857,8685966,7305085,9213341,10791855,6582394,6581107,3620163,4213329,12633800,10594221,
	7700617,10855848,9672347,6053989,5989483,9936547,7305085,7502466,11646649,9673889,9213854,
	11514549,9672862,10988720,6645867,4147279,10528685,11449014,10068135,9804959,6384239,6714494,
	10923185,10001826,10857906,10791341,6253942,8424082,7501950,7765637,12041406,8950168,
	7897997,10067877,6910843,5659487,5463396,11317426,9803674,7897737,10265255,8424082,
	9082271,12369602,10396844,9936806,6646123,4476244,10922670,9342865,6976122,8028808,
	7239291,7240065,13422547,11186874,9871786,10791339,6385529,10594735,9870239,7897997,
	11843772,10397354,9410720,6646641,2239283,5988452,6252399,9409430,5396315,5792877,
	11646907,9936547,7964047,11580085,8555156,7832460,7106416,5265760,10001569,7040368,
	5068639,7831943,7107705,5529190,12896204,10134701,8293269,12435906,9214111,9279131,
	6054505,6056308,12896201,10528427,8292754,6909810,3883592,5659488,6713463,9409430,
	4869713,5661033,12699595,10002084,9345183,11119536,8883606,7963789,7830139,4870745,
	8817809,6974319,4410709,8554896,6975863,5134946,13488339,10726581,8161684,13488338,
	11055544,8291469,6581104,6779772,12435651,9607841,8489876,7041141,3620677,5462365,
	5858155,8751244,5067093,6384498,11778236,9344669,9543079,10790829,7700104,8884635,
	8290176,4147536,8817811,6908269,5660263,7963016,6976119,6845308,13093582,10594739,
	9082528,12370114,9213855,8094089,6120811,6779515,11054257,9673632,8555411,6844019,
	3817800,5725022,5199710,7567229,6580331,6186861,13159118,11778237,8819357,10132897,
	7305348,9279392,7764089,4344916,9804447,7105904,5265248,8752787,8028549,6450548,12370373,
	10989495,8950686,12370115,9674406,8160137,5067867,5332327,12567495,10266284,7042945,
	6777712,4541523,9474965,10133410,8093314,5725538,6187377,11382963,12303807,10331306,
	8488587,6318706,9082011,11646134,10660271,11580084,6381923,4081231,9739169,9475480,
	9080982,12895946,10068392,7503754,9739168,8818840,11186099,6712691,6318707,11646135,
	8949652,9870499,7567485,4081229,10265255,7832202,7698813,4540749,6844536,8028551,
	4871003,6582650,9673119,7107708,9016219,15132132,10463922,9146519,7171182,4081489,
	9673377,12238272,10331309,12369859,9871271,7240325,5857639,3226951,10265510,7502721,
	6253171,9343380,4935249,6844277,7765635,4015692,9278362,6253428,7764862,5592665,4871003,
	7305343,5792362,5793135,10067619,8423309,9805734,12172478,8030098,8423053,7697526,4805212,
	9344411,10988720,8556183,12172993,11318459,7766411,5331809,2766398,8817551,7042171,6253170,
	10132896,4475215,6647156,8159881,4081744,8489873,6648444,10330274,6119265,4542295,6976378,
	5134431,5858671,10396326,7633792,10857651,12501444,8555925,8817809,7960698,5397863,8949911,
	11383222,8490134,11778235,12370889,7634826,5331553,3226693,10462632,7831686,5595498,10067361,
	4738643,7831686,8094600,3490121,8423823,7042944,10527912,7961727,4805469,6055791,5134430,6384757,
	11252150,7042945,9608614,13027529,7963789,8357773,10526368,6385015,9081753,10922671,
	7437961,12962250,12699855,7043461,5068122,3358021,10857648,9542046,8160910,10198689,
	4936022,7436671,8291979,2634813,8818068,6779774,10857907,11186357,10397355,7831429,
	4608345,6187635,13028560,10857908,11317944,11120049,6780288,10989750,12896201,10397357,
	10988721,10331048,8095891,11120821,11187129,9805220,5133401,2831421,10462634,12369858,
	11186356,9672602,4212299,6581878,11843772,9146774,9147031,6188408,12305352,11054771,7898252,
	8752272,4345176,5397863,11908533,9541019,8884891,
	11975356,7898253,10725807,10067105,6780289,9673632,10593704,8227218,6515571,5923434,7107706,
	6777967,2831679,9015189,9344153,7832201,8817550,5198937,6187118,12764873,10857648,10725805,
	7766926,12502730,9739169,5990515,8752274,
	4740446,5134691,9934488,7107451,8753818,12698821,8489619,7634309,7896449,4346463,10068133,
	11317428,8095374,6975607,5529191,6252399,
	6383210,2897214,8949395,9475995,9476510,8817293,5396572,6515570,11909823,10199976,12962252,
	9345441,11910336,10528170,6253686,7699844,
	4608346,5726570,10000794,5791847,8686739,12369858,7832717,7502981,8290693,5004134,10594220,
	12436166,8424598,
	6647414,5462884,6383984,5988708,2699834,9147031,9409945,7832201,8883344,6119779,5134174,
	11186613,11252406,
	11317941,8555926,11910336,9344925,6319736,8225930,5792619,5397605,7895677,4870488,8423567,
	11646649,8292753,6581878,8028035,5069927,10199719,12107201,8556440,6449521,5660262,6055020,
	6251368,2568247,8554894,10133411,9607839,9541530,4935763,4871516,12436165,10068647,10989233
	,7832718,11515580,9344668,6780030,11054769,5792876,5661806,8553092,4278094,
	8095117,11975614,7503496,7699843,7041398,3885654,10067876,11515323,9016220,
	6844277,5594727,6055021,6382953,2699834,8818323,9739166,8753045,11054254,5725024,
	6713208,12633544,10002598,


};

Uint32 grassColor[] =
{

	
	
	2907705,3039290,3106620,3172157,3039549,2974013,3237185,2842173,2644023,2973243,2577714,2577715,2776888,3040318,2907966,3237442,3433796,2644022,2577716,2511669,2841658,2775604,2775606,2972987,2841914,2975552,2974526,3105602,2974018,2908220,3170365,2840375,2775862,3040318,3040319,2908984,3039548,2907962,2972729,2643768,2777145,3106366,2642998,2841658,3040575,2907705,2511410,3040834,3369284,2972986,2709814,2841403,2709047,2511151,2841913,2775865,2577460,2974012,3040064,2908221,2710325,2709813,2644023,2775606,3039290,2841658,2510898,2710324,2842170,2775353,2841656,2775354,3039551,2908732,2971964,3105343,2776378,2841402,2775608,2643766,2776379,2841144,2708789,2776121,2578485,2446383,2643506,2841915,3369542,3236417,2974273,2842429,2510897,2774584,2709304,2644276,2840886,2841145,2643507,2710070,2578229,2841915,2776377,2775608,3301698,2908475,2972986,3170879,2644022,2644023,2842938,2973753,2973759,2644279,2774069,2841656,2512691,2974269,3106368,2907709,3501642,3104575,2708024,3106370,2841657,2841145,2709559,2511922,2511923,2906936,3039549,3039811,2842427,2907962,3172162,2843194,3039035,3237184,2776122,2841658,2908217,2643506,2842680,3173441,3106369,2841146,2775351,2973496,2841397,3105085,3106112,2775608,2907195,2908221,2906681,3237442,3239492,3105855,2775608,2577973,2842424,2841399,2973241,3171905,3172161,2841404,2841403,2841912,2841655,2906937,2841146,2709559,2973755,2840887,2775351,2645047,2907705,2972731,2710327,2907963,3237696,2841397,2577971,2841656,2775607,2776633,3106621,3104830,2908478,3041600,2907707,2907451,3039295,2907194,2973753,2775605,2775865,3039039,2578228,2578485,2841656,2708788,2842168,2907706,2643511,2577203,2709047,2710328,2975036,2908219,2775609,2775353,3040063,2841398,2709814,3040830,3039549,2841402,2908733,2907708,2841403,3172932,3106624,2841144,2642742,2577462,2776121,2577714,2710585,3106116,3039806,2841657,2709815,2775608,2841914,2974015,2907963,3040317,2708789,2775606,2975038,3107136,3237955,2775610,2841656,2906936,3170878,2974783,3171138,2973502,2907964,
	3172419,2907452,3039039,3369799,3039806,2710070,2710072,2776634,2710840,2776122,3039552,3370566,3105855,3171648,2709815,3106113,3435848,2973502,2973757,2907705,
	

};

Uint32 doorColor[] = {
	5859746,4019104,5268908,5203370,5137321,5137061,5202852,5202598,5268649,5334699,5268906,5268647,5268390,5268651,5203113,5203111,5202856,5202855,5202855,5268650,5203113,5334700,5202856,5268392,5334703,5334703,5268651,5334702,5334704,5268394,5202601,5137065,5006762,1518203,1252702,1516387,1516131,1450851,1451108,1582184,1581930,1582182,1582181,1516131,1318753,1450599,1516393,
	1582442,1451113,1385065,1516133,1582183,1582697,1581928,1516134,1516394,1582189,1516910,1384808,1450603,1450860,1450345,1450605,1516653,5861036,1121385,862,4978,5493,5238,4469,4464,3950,3694,70513,70516,4980,5233,70512,70773,5236,5237,4979,4718,5491,4979,4980,71288,4465,4982,5501,5242,70519,71294,71293,70518,5860781,1253489,3174,597111,596599,135532,3431,70002,662392,530297,
	3702,3951,4206,2919,3183,3699,3699,267645,596348,464245,464237,399993,4213,3956,3696,2932,3711,3193,1131,199797,465016,199794,5794731,1187437,2660,530553,464236,2371175,3226487,2502504,398440,1121385,3554415,3290991,3093609,2961768,2896495,2830961,3094649,1515363,135278,464244,200813,791383,2698594,2962802,2831212,2765422,3028600,3028600,3686263,2173028,2407,1647210,5794985,
	1187691,70012,466844,1189508,3820180,2045866,1648239,70510,2833295,4345750,1584274,2110611,2110866,2110868,1716372,2044031,1910363,531843,401547,336275,924251,2239331,2176664,2242206,2308762,2374296,2242710,3624873,4412310,4739,3294868,5795502,1319277,1630,397935,1251937,2699378,2929,198987,133971,2634101,2303853,92,2661,2664,1364,659789,1054548,660834,68195,2141,2916,1882,
	584,66882,2647,3699,2663,2144,793716,3357820,2145,2699894,5795245,1319537,1888,398454,1187178,2830966,267387,593749,199512,2699896,2699896,2156,201074,462162,1843545,858222,792950,2239349,2896241,3225462,3093618,2830709,1647219,2397,330572,725068,463470,266609,1385081,3488889,1373,2568310,5795242,1319796,69496,465808,1188225,2898056,466585,661098,332140,2898315,2833038,4752,
	661361,2041966,596877,1911433,4739736,3884695,2438292,1846416,2043792,2898321,3818637,3687054,793736,200293,989024,399500,1517973,3686534,3188,2700938,5794987,1319278,1891,398718,1187187,2831228,464774,594526,199773,2765694,2832008,1382,1778018,594812,2699389,5331094,1516677,2166,2932,
	135544,134774,2420,3961,2765442,4541059,924540,133203,462423,1385357,3554941,1636,2699645,5794730,1318763,1111,462956,1120865,2699375,332144,462157,67663,2764915,2370161,461644,856672,2172268,5265034,199269,1633,398438,396898,396897,462947,462950,397671,865,1844079,4342902,462179,132413,1384039,3489150,855,2567535,5860779,1187176,2407,464765,1121129,2635132,136581,331095,
	68697,2832261,2567011,726108,989814,4279177,1055096,1390,4464,4463,4466,3949,4208,4212,4213,4212,370,2700680,2963070,1362,1384280,3490443,3178,2569342,5795243,1319792,70011,467097,1189510,3425419,1387669,1450600,202095,3096470,4936317,4987,3030675,5134998,926070,2175620,2241157,2175621,2044292,2109824,2175619,2044035,2109057,2109572,1912710,2439052,4937621,729736,2043248,
	4608648,5254,3162767,5795244,1319794,1885,398447,595561,2633832,3028075,2896748,727143,1450348,3752063,200297,1646696,3356271,3027827,3159672,3291004,3225724,3159928,3159413,3093357,3224687,3159409,3225722,3225718,3027572,3225731,529785,1909874,3356273,2146,1909868,5926571,1319797,2920,465786,399739,70775,136055,136059,399739,333179,4223,400252,202361,2930,3704,4220,4220,
	4221,4220,3448,3698,4729,4730,4732,3960,3455,3975,268163,135291,69248,465023,134778,5729192,1385588,661614,1254783,1189505,1189507,1123456,1057917,991608,1122423,1188729,1188731,1057404,1123708,1188984,1254780,1123708,1058173,1058173,1123705,1189759,1188477,1188476,1255296,1123195,1123709,1058434,1124228,1255557,1190025,1321094,1255296,5663401,1385328,661613,1320578,1255298,
	1189504,1188991,1188733,1188220,1254269,1320833,1189505,1255298,1255039,1188732,1189248,1189248,1189504,1189247,1123196,1255296,1255299,1189506,1255556,1254271,1188995,1124234,1189510,1188480,1189257,1320586,1254275,5795499,1187694,1369,398441,332392,68449,2400,3177,332907,265836,2416,267114,134243,93,1642,2159,2417,2417,2415,1386,862,2403,2664,2927,2410,1390,1912,134773,67434,
	67176,265831,67174,5795244,1319282,69231,531333,531581,2109044,2700408,2305909,399477,1648764,3687308,201849,1647992,3292031,3160703,3160964,3095684,3161221,3226500,3161216,3094909,3160188,3226240,3227015,3226756,3095172,3095948,531588,2240903,3358081,4982,1582453,5729195,1187439,70013,466582,1189250,3622283,2110361,1844840,4718,3162003,5001338,4473,3162259,4937618,1056882,
	2240896,2043770,2174843,2109568,2109820,2175359,2109313,2108798,2108797,1912195,2373256,4805777,532097,2371950,4674445,4742,3293839,5729708,1252970,1114,331882,1317724,2502512,2160,132935,67661,2830970,2566489,659282,1120362,4212606,724840,865,3430,3172,2916,2143,2658,2919,2921,3174,98,
	2633594,2896498,69,1514831,3423874,1370,2568051,5861037,1319792,1889,267384,1187692,2765686,267388,462934,134233,2897019,2371196,660056,791658,2501751,5068690,2671,3439,595825,463724,529007,594798,463984,464241,1387,1844086,4409213,529006,67395,1581937,3489411,1117,2634104,5795242,1319795,69498,400273,1385346,2963593,532121,726890,266860,2963851,2898841,2930,1910898,531086,
	3160715,5266340,1255059,3459,70534,202632,202376,4486,5258,2701206,4738961,1188490,200292,529251,1781149,3621256,3189,2898059,5795756,1385074,1893,398462,1384309,2831486,398982,660062,134495,2831229,2831234,2941,660322,1975399,529534,2108285,4673424,3489419,2239621,1976965,1976962,2634114,3686019,3751809,858231,67930,791122,201339,1648008,3554686,1379,2765694,5794987,1384816,
	1112,266092,1186915,2765167,200559,527693,67921,2699378,2633328,1378,134505,461642,1843283,791912,792430,2304878,2962029,3356529,3159405,2830706,1647215,1879,264003,659015,397159,200039,1581683,3423094,341,2699122,5794730,1318764,2404,332662,1252711,2765943,4218,265297,134232,2765689,2304370,98,3692,3180,2134,791890,1251673,595302,3176,2656,3432,2144,1099,133190,134235,4472,
	3438,2918,1122940,3424127,2662,2700411,5729192,1253483,70525,401308,1452424,3623061,1191075,1253482,136303,2964879,4214426,1387156,2044821,1979795,1913750,1585045,1978493,1713502,466566,467084,401811,989528,2108005,2045081,2045345,2111644,2177177,2045592,3624875,4412567,4484,3425943,5794987,1319021,68195,399222,661869,2963054,3292280,2897003,595818,1121381,3686515,3357298,
	3225196,3028074,3028080,3028339,3292285,1515361,69485,464243,200555,856917,2830440,3094389,3028592,3093873,3225721,3225978,3949177,2370151,1635,2239344,5861037,1253483,2658,596854,465269,267117,398441,464501,728185,530038,3699,4205,4203,2917,3180,3694,3696,333435,596090,464244,463978,465271,4464,4209,3949,2929,3709,3191,1126,199793,530294,200049,5926830,1252970,1378,71033,
	71547,5755,70521,4724,4722,4467,71032,71290,71290,71543,5492,6010,5753,5753,5752,5236,71800,5753,71033,137596,4983,5499,6274,6016,71037,71812,71811,71035,5269420,1714551,1054551,1318494,1318238,1318240,1318753,1384292,1318243,1252960,1384031,1317982,1186399,1318243,1449828,1384549,1252966,1252965,1318240,1450082,1384550,1318755,1317985,1318245,1318505,1187688,1186657,1252454,
	1384038,1318244,1318504,1384295,5333662,3493276,4873892,4742564,4676770,4741790,4676511,4742050,4808355,4808614,4808356,4742561,4676512,4742565,4676772,4742307,4742051,4742048,4676768,4742562,4742307,4873895,4742306,4676516,4808363,4808363,4807845,4873640,4873898,4742051,4610212,4610469,
};

Uint32 bulletColor[1024] =
{

	
	
	2907705,3039290,3106620,3172157,3039549,2974013,3237185,2842173,2644023,2973243,2577714,2577715,2776888,3040318,2907966,3237442,3433796,2644022,2577716,2511669,2841658,2775604,2775606,2972987,2841914,2975552,2974526,3105602,2974018,2908220,3170365,2840375,2775862,3040318,3040319,2908984,3039548,2907962,2972729,2643768,2777145,3106366,2642998,2841658,3040575,2907705,2511410,3040834,3369284,2972986,2709814,2841403,2709047,2511151,2841913,2775865,2577460,2974012,3040064,2908221,2710325,2709813,2644023,2775606,3039290,2841658,2510898,2710324,2842170,2775353,2841656,2775354,3039551,2908732,2971964,3105343,2776378,2841402,2775608,2643766,2776379,2841144,2708789,2776121,2578485,2446383,2643506,2841915,3369542,3236417,2974273,2842429,2510897,2774584,2709304,2644276,2840886,2841145,2643507,2710070,2578229,2841915,2776377,2775608,3301698,2908475,2972986,3170879,2644022,2644023,2842938,2973753,2973759,2644279,2774069,2841656,2512691,2974269,3106368,2907709,3501642,3104575,2708024,3106370,2841657,2841145,2709559,2511922,2511923,2906936,3039549,3039811,2842427,2907962,3172162,2843194,3039035,3237184,2776122,2841658,2908217,2643506,2842680,3173441,3106369,2841146,2775351,2973496,2841397,3105085,3106112,2775608,2907195,2908221,2906681,3237442,3239492,3105855,2775608,2577973,2842424,2841399,2973241,3171905,3172161,2841404,2841403,2841912,2841655,2906937,2841146,2709559,2973755,2840887,2775351,2645047,2907705,2972731,2710327,2907963,3237696,2841397,2577971,2841656,2775607,2776633,3106621,3104830,2908478,3041600,2907707,2907451,3039295,2907194,2973753,2775605,2775865,3039039,2578228,2578485,2841656,2708788,2842168,2907706,2643511,2577203,2709047,2710328,2975036,2908219,2775609,2775353,3040063,2841398,2709814,3040830,3039549,2841402,2908733,2907708,2841403,3172932,3106624,2841144,2642742,2577462,2776121,2577714,2710585,3106116,3039806,2841657,2709815,2775608,2841914,2974015,2907963,3040317,2708789,2775606,2975038,3107136,3237955,2775610,2841656,2906936,3170878,2974783,3171138,2973502,2907964,
	3172419,2907452,3039039,3369799,3039806,2710070,2710072,2776634,2710840,2776122,3039552,3370566,3105855,3171648,2709815,3106113,3435848,2973502,2973757,2907705,
	2907448,2907708,2974269,3039547,2973499,3105851,3039547,2841658,2709044,2842171,3039295,2907961,3171904,2776633,2776380,3171395,3237700,2908221,3040318,2908216,2907705,2775098,2840631,3105341,3039547,3238209,2842427,2974269,3105603,3105858,2841914,2775865,2774839,3170622,3040063,2841655,2842681,2710326,2907706,2973756,2906422,2906679,2842425,2974268,3106111,2776122,2710588,2908476,3038014,2974015,2843708,2907705,2840631,2577203,2709560,3235904,3170363,3040316,3238210,2907449,2908474,3173186,3041086,2974012,2708788,3171135,3368516,3039551,2645048,2445360,2642740,2445362,2841400,3302720,3039804,3040316,3304261,2973248,2710075,2578229,2906425,2906684,2644790,2842426,2576948,2445616,2841916,3171650,3369796,3304258,3040061,2775093,2776632,3172672,2907706,2974011,3304515,3106111,3170878,2973247,2974527,2775864,2576948,2578486,2973756,2775095,2974010,3040830,2775095,2709560,2578489,2380081,2908218,3170623,2841914,2842425,2973755,2908475,2775609,2643767,3371079,3171392,2775607,2842425,2908219,3039547,3039545,2709813,3304515,3171903,2974269,2973501,2842170,2710073,2643512,2974526,2907708,2841399,3040314,3305028,2775351,2511668,2644534,2578739,2776120,2908218,2907961,2841658,3040318,2841914,2577462,2907194,3238723,2975037,2709300,2841657,2907703,2775604,3238719,3172157,2908217,2974525,3040063,2841145,2644021,2908475,2974014,2709817,2578486,3172930,3040573,3040831,3105600,2841403,2841914,2973497,2775095,2511666,2974267,3238210,2776379,2577718,2775610,2776376,2643764,2975035,2908218,2841913,2709557,2709812,2972472,2973499,3040573,2974268,3040062,2907963,2577206,3170879,3104572,2841402,3106627,3106368,2908218,2709302,2972990,2774584,2380080,2511922,2642741,2776889,3040062,3171905,3105601,2774841,2776634,2908219,2643253,2775094,2974010,2775605,2907708,3170621,3038520,2907707,2975039,2974013,2841146,2775864,3040576,3170880,2974525,3040831,3172417,2974781,3105085,2841400,2643253,2642484,2775605,2842683,2709559,2709556,3040318,3172416,3172674,3303747,3039291,2775606,2841912,2643509,2643765,

};

Uint32 stoneColor[1024] = {
	
};




//FPS”Œœ∑—˘¿˝
typedef struct FPSPlayer {
	//µ⁄“ª»À≥∆ÕÊº“
	float fPlayerX = 15.0f;				// ÕÊº“≥ı ºŒª÷√
	float fPlayerY = 5.9f;

	float fPlayerA = 0.0f;				// ÕÊº“≥ı º◊™Ω«
	float fFOV = 3.14159f / 4.0f;		// ÕÊº“ ”“∞
	float fDepth = 30.0f;				// ◊Ó‘∂ªÊ÷∆æ‡¿Î
	float fSpeed = 7.0f;
}FPSPlayer;

typedef struct GameObject {
	//”Œœ∑ŒÔ∆∑
	float x;
	float y;
	Uint32* image;
};

static char currentMap[65535];
static vector<GameObject> gameObjects;

static int nMapWidth;
static int nMapHeight;


static FPSPlayer fpsPlayer;

static void LoadMap(
	wstring map,
	int Width,				// World Dimensions
	int Height)
{
	nMapWidth = Width;
	nMapHeight = Height;

	//µÿÕºº”‘ÿµΩª∫¥Ê¿Ô√Ê
	for (int i = 0; i < map.length(); i++)
	{
		currentMap[i] = map[i];
	}

}

static float distanceToCollider = 0.0f;

void FPSPlayerInput(FPSPlayer* fpsPlayer) {

	// Handle CCW Rotation
	if (GetKeyHold('A'))
		fpsPlayer->fPlayerA -= (fpsPlayer->fSpeed * 0.25f) * deltaTime;

	// Handle CW Rotation
	if (GetKeyHold('D'))
		fpsPlayer->fPlayerA += (fpsPlayer->fSpeed * 0.25f) * deltaTime;

	// Handle Forwards movement & collision
	if (GetKeyHold('W'))
	{
		fpsPlayer->fPlayerX += sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		fpsPlayer->fPlayerY += cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		if (currentMap[(int)(fpsPlayer->fPlayerY + distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX + distanceToCollider)] == '#' ||
			(currentMap[(int)(fpsPlayer->fPlayerY + distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX + distanceToCollider)] == '*'))
		{
			fpsPlayer->fPlayerX -= sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
			fpsPlayer->fPlayerY -= cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		}
	}

	// Handle backwards movement & collision
	if (GetKeyHold('S'))
	{
		fpsPlayer->fPlayerX -= sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		fpsPlayer->fPlayerY -= cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		if (currentMap[(int)(fpsPlayer->fPlayerY - distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX - distanceToCollider)] == '#' ||
			(currentMap[(int)(fpsPlayer->fPlayerY - distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX - distanceToCollider)] == '*'))
		{
			fpsPlayer->fPlayerX += sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
			fpsPlayer->fPlayerY += cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		}
	}

	// Handle backwards movement & collision
	if (GetKeyHold('Q'))
	{
		fpsPlayer->fPlayerX -= cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		fpsPlayer->fPlayerY += sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		if (currentMap[(int)(fpsPlayer->fPlayerY + distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX - distanceToCollider)] == '#' ||
			(currentMap[(int)(fpsPlayer->fPlayerY + distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX - distanceToCollider)] == '*'))
		{
			fpsPlayer->fPlayerX += cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
			fpsPlayer->fPlayerY -= sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		}
	}
	if (GetKeyHold('E'))
	{
		fpsPlayer->fPlayerX += cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		fpsPlayer->fPlayerY -= sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		if (currentMap[(int)(fpsPlayer->fPlayerY - distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX + distanceToCollider)] == '#' ||
			(currentMap[(int)(fpsPlayer->fPlayerY - distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX + distanceToCollider)] == '*'))
		{
			fpsPlayer->fPlayerX -= cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
			fpsPlayer->fPlayerY += sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		}
	}

	// ÕÊº“ø™ª
	if (GetKeyHold('J'))
	{
		cout << "fire" << endl;
		//…˙≥…◊”µØ
		GameObject bullet;
		bullet.x = fpsPlayer->fPlayerX;
		bullet.y = fpsPlayer->fPlayerY;
		bullet.image = bulletColor;
		//Ω´◊”µØº”»ÎµΩ◊”µØ∂”¡–¿Ô√Ê
		gameObjects.push_back(bullet);

	}

	if (GetKeyHold('L'))
	{
		fpsPlayer->fPlayerX += sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		fpsPlayer->fPlayerY += cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		//∂‘√≈Ω¯––Ωªª•
		if (currentMap[(int)(fpsPlayer->fPlayerY + distanceToCollider) * nMapWidth + (int)(fpsPlayer->fPlayerX + distanceToCollider)] == '*')
		{
			cout << "interact" << endl;
			currentMap[(int)fpsPlayer->fPlayerY * nMapWidth + (int)fpsPlayer->fPlayerX] = '.';
			//map.c_str()[(int)fPlayerX * nMapWidth + (int)fPlayerY] = '.';

		}
		fpsPlayer->fPlayerX -= sinf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
		fpsPlayer->fPlayerY -= cosf(fpsPlayer->fPlayerA) * fpsPlayer->fSpeed * deltaTime;;
	}

}


void DrawFPSMap(FPSPlayer* player) {

	// Display Map

	for (int x = 0; x < screenWidth; x++)
	{
		// For each column, calculate the projected ray angle into world space
		float fRayAngle = (player->fPlayerA - player->fFOV / 2.0f) + ((float)x / (float)screenWidth) * player->fFOV;

		// Find distance to wall
		float fStepSize = 0.03f;		  // Increment size for ray casting, decrease to increase										
		float fDistanceToWall = 0.0f;	//                                      resolution

		bool bHitDoor = false;
		bool bHitWall = false;		// Set when ray hits wall block
		//bool bBoundary = false;		// Set when ray hits boundary between two wall blocks

		float fEyeX = sinf(fRayAngle); // Unit vector for ray in player space
		float fEyeY = cosf(fRayAngle);

		//Œ∆¿ÌÃ˘Õº”≥…‰◊¯±Í
		float fSimpleX = 0.0f;
		float fSimpleY = 0.0f;

		COLORREF color = RED;		// «Ω±⁄ª˘¥°—’…´Œ™∫Ï…´

		// …‰œﬂÕ∂…‰À„∑®
		// º∆À„√ø∏ˆ«Ω√Ê∏¯æ‡¿Î∆¡ƒªµƒæ‡¿Î
		// Incrementally cast ray from player, along ray angle, testing for 
		// intersection with a block
		//if (!bHitWall && fDistanceToWall < fDepth)
		while ((!bHitDoor) && !bHitWall && fDistanceToWall < player->fDepth)
		{
			//Ã˘ÕºÀ„∑®æÕ «£¨ªÒ»°…‰œﬂª˜÷–◊©øÈµƒ◊¯±Í£¨∂‘”¶µΩÕº∆¨…œµƒœ‡Õ¨◊¯±ÍµƒœÒÀÿ÷µ

			fDistanceToWall += fStepSize;

			float fTestPointX = player->fPlayerX + fEyeX * fDistanceToWall;
			float fTestPointY = player->fPlayerY + fEyeY * fDistanceToWall;

			int nTestX = (int)fTestPointX;
			int nTestY = (int)fTestPointY;

			// …‰œﬂ≥ˆ±ﬂΩÁµƒ«Èøˆ
			// Test if ray is out of bounds
			if (nTestX < 0 || nTestX >= nMapWidth || nTestY < 0 || nTestY >= nMapHeight)
			{
				bHitWall = true;			// Just set distance to maximum depth
				fDistanceToWall = player->fDepth;
				continue;
			}
			// Ray is inbounds so test to see if the ray cell is a wall block
			// »Áπ˚…‰œﬂºÏ≤‚µΩµƒ ««Ω±⁄
			if (currentMap[nTestY * nMapWidth + nTestX] == '#' ||
				currentMap[nTestY * nMapWidth + nTestX] == '*')
			{
				// …‰œﬂ…‰µΩ«Ω±⁄
				if (currentMap[nTestY * nMapWidth + nTestX] == '#')
				{
					// …‰œﬂ…‰µΩ√≈
					bHitWall = true;
				}
				if (currentMap[nTestY * nMapWidth + nTestX] == '*')
				{
					// …‰œﬂ…‰µΩ√≈
					bHitDoor = true;
				}

				//º∆À„Ã˘Õº◊¯±Í

				float fBlockMidX = (float)nTestX + 0.5f;
				float fBlockMidY = (float)nTestY + 0.5f;




				//«Ω±⁄◊™Ω«
				float fTestAngle = atan2f((fTestPointY - fBlockMidY), (fTestPointX - fBlockMidX));

				//fSimpleX = fTestPointY - (float)nTestY;

				if (fTestAngle >= -3.14159f * 0.25f && fTestAngle < 3.14159f * 0.25f)
				{
					fSimpleX = fTestPointY - (float)nTestY;

				}
				if (fTestAngle >= 3.14159f * 0.25f && fTestAngle < 3.14159f * 0.75f)
				{
					fSimpleX = fTestPointX - (float)nTestX;
				}
				if (fTestAngle < -3.14159f * 0.25f && fTestAngle >= -3.14159f * 0.75f)
				{
					fSimpleX = fTestPointX - (float)nTestX;
				}
				if (fTestAngle >= 3.14159f * 0.75f || fTestAngle < -3.14159f * 0.75f)
				{
					fSimpleX = fTestPointY - (float)nTestY;
				}

				//printf("%f,%f\n", fSimpleX, fSimpleY);


			}

			//printf(" % f\n",fDistanceToWall);

		}

		// Calculate distance to ceiling and floor
		// ÃÏª®∞Â = ∆¡ƒª…œ∞Î∆¡ - ∆¡ƒª/fDistanceToWall
		// µÿ∞Â = ∆¡ƒªºı»•ÃÏª®∞Âµƒ≤ø∑÷
		int nCeiling = (float)(screenHeight / 2.0) - screenHeight / ((float)fDistanceToWall);
		int nFloor = screenHeight - nCeiling;

		// ∏˘æ›æ‡¿ÎªÊ÷∆«Ω±⁄º∞∆‰π‚”∞–ßπ˚
		// º∆À„Ω«…´∫Õ«Ωµƒæ‡¿Î£¨æ‡¿Î‘Ω‘∂£¨÷µ‘Ω¥Û£¨—’…´‘Ω∞µ
		float deltaWallDepth = fDistanceToWall / player->fDepth;
		float shadowOfWall = (1 - deltaWallDepth) * (1 - deltaWallDepth);

		// ”Œœ∑ŒÔ∆∑¥¶¿Ì

		for (auto& object : gameObjects)
		{
			float fVecX = object.x - player->fPlayerX;
			float fVecY = object.y - player->fPlayerY;
			float fDistanceFromPlayer = sqrtf(fVecX * fVecX + fVecY * fVecY);

			float fEyeX = sinf(player->fPlayerA);
			float fEyeY = cosf(player->fPlayerA);
			float fObjectAngle = atan2(fEyeY, fEyeX) - atan2(fVecY, fVecX);
			if (fObjectAngle < -3.14159f)
			{
				fObjectAngle += 2.0f * 3.14159f;
			}
			if (fObjectAngle > 3.14159)
			{
				fObjectAngle -= 2.0f * 3.14159f;
			}
			bool bInPlayerFOV = fabs(fObjectAngle) < player->fFOV / 2.0f;

			if (bInPlayerFOV && fDistanceFromPlayer >= 0.5f &&
				fDistanceFromPlayer < player->fDepth)
			{

			}

		}

		//Ã˘ÕºµƒªØ’‚¿Ôµƒrgb“™∂‘”¶µΩÃ˘Õºµƒ◊¯±Í
		//ªÊ÷∆–≈œ¢µΩ∆¡ƒª…œ
		for (int y = 0; y < screenHeight; y++)
		{

			// Each Row
			if (y <= nCeiling) {
				//ÃÏª®∞Â
				//ΩˆΩˆ÷ª”√…´øÈΩ¯––ÃÓ≥‰
				color = RGB(15, 15, 128);
			}
			else if (y > nCeiling && y <= nFloor) {
				//ªÊ÷∆ÃÏª®∞Â∫Õµÿ∞Â÷Æº‰µƒŒÔ∆∑
				fSimpleY = ((float)y - (float)nCeiling) / ((float)nFloor - (float)nCeiling);
				color = GetSpriteColor(fSimpleY, fSimpleX, 32, 32, wall1Color);
				if (bHitDoor)
				{
					//»Áπ˚ºÏ≤‚µΩµƒ «√≈
					color = GetSpriteColor(fSimpleY, fSimpleX, 32, 32, doorColor);
				}
				color = RGB(GetRValue(color) * shadowOfWall, GetGValue(color) * shadowOfWall, GetBValue(color) * shadowOfWall);

			}
			else
			{
				// ∏˘æ›ªÊ÷∆µÿ∞Â∫Õ“ı”∞

				float b = 1.0f - (((float)y - screenHeight / 2.0f) / ((float)screenHeight / 2.0f));
				float deltaRayShine = (1 - b) * (1 - b);

				// º∆À„Ã˘Õº◊¯±Í

				float depth = (1 - b);

				float fTestPointX = player->fPlayerX + fEyeX * depth;
				float fTestPointY = player->fPlayerY + fEyeY * depth;

				fSimpleY = fTestPointY - (int)fTestPointY;
				fSimpleX = fTestPointX - (int)fTestPointX;
				color = GetSpriteColor(fSimpleX, fSimpleY, 32, 32, grassColor);
				color = RGB(GetRValue(color) * deltaRayShine, GetGValue(color) * deltaRayShine, GetBValue(color) * deltaRayShine);

				//÷Æ«∞µƒÀ˘”–≤Ÿ◊˜∂º «‘⁄º∆À„œÒÀÿµ„µƒ÷µ
			}

			DrawPixel(x, y, color);

		}

	}


	//screen[((int)fPlayerX + 1) * nScreenWidth + (int)fPlayerY] = 'P';

	// Display Stats
	//swprintf_s(screen, 40, L"X=%3.2f, Y=%3.2f, A=%3.2f FPS=%3.2f ", fPlayerX, fPlayerY, fPlayerA, 1.0f / fElapsedTime);
	std::printf("X=%3.2f, Y=%3.2f, A=%3.2f FPS=%3.2f\n", player->fPlayerX, player->fPlayerY, player->fPlayerA, 1.0f / deltaTime);
}

void DrawMiniMap(FPSPlayer* player)
{

	//currentMap[((int)player->fPlayerX + 1) * nMapWidth + (int)player->fPlayerY] = 'P';
	//printf("x = %f , y = %f\n",((int)player->fPlayerX + 1) * nScreenWidth , (int)player->fPlayerY);
	//ªÊ÷∆2dµÿÕºÕºœÒ

	for (int x = 0; x < screenWidth; x++)
	{
		for (int y = 0; y < screenHeight; y++)
		{

			//Ω´ ˝◊È¥Ú”°µΩÕº∆¨…œ
			float deltaX = (float)nMapWidth / (float)screenWidth;
			float deltaY = (float)nMapHeight / (float)screenHeight;
			int testX = (int)x * deltaX;
			int testY = (int)y * deltaY;



			COLORREF color;
			color = WHITE;
			if (currentMap[testY * nMapWidth + testX] == '#')
			{
				color = RED;
			}
			if (testX == (int)player->fPlayerY && testY == ((int)player->fPlayerX + 1))
			{
				color = BLUE;
			}
			//screen[((int)fPlayerX + 1) * nScreenWidth + (int)fPlayerY] = 'P';
			//printf("x = %d,y = %d\n", testX, testY);

			//DrawPixel(x, y,color);
		}
	}
}

static void GameStart()
{
	// write you game init
	wstring map;
	map += L"##################################";
	map += L"##################################";
	map += L"############.......###############";
	map += L"############.......###############";
	map += L"############.......###############";
	map += L"############.......###############";
	map += L"############.......###############";
	map += L"############.......###############";
	map += L"############.......###############";
	map += L"##.......######*##################";
	map += L"##.......#####...#################";
	map += L"##.......###.................#####";
	map += L"##.......###.................#####";
	map += L"#######*####.................#####";
	map += L"#####........................#####";
	map += L"#####........................#####";
	map += L"#####...####.................#####";
	map += L"#####...##########################";
	map += L"#####...............##############";
	map += L"#####...............##############";
	map += L"#################...##############";
	map += L"##################*###############";
	map += L"#################...##############";
	map += L"###......................#########";
	map += L"###......................#########";
	map += L"###..............#################";
	map += L"###..............#..............##";
	map += L"###..............*..............##";
	map += L"###..............#..............##";
	map += L"##################################";

	LoadMap(map, 34, 30);
	//printf("%d\n",map.length());
}

static void GameLoop()
{
	//write your game loop

	FPSPlayerInput(&fpsPlayer);
	DrawMiniMap(&fpsPlayer);
	DrawFPSMap(&fpsPlayer);
}


SET_GAME_START(GameStart);
SET_GAME_LOOP(GameLoop);