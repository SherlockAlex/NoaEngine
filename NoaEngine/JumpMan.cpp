#ifdef JUMPMAN




#include "NoaEngine.h"

typedef struct JumpPlayer
{
	float fPlayerX = 14.7f;				// 玩家初始位置
	float fPlayerY = 5.09f;

	int w = 30;
	int h = 40;

	float speed = 7.0f;

}JumpPlayer;

//设置
static void GameStart();
static void GameLoop();
static void LoadMap(
	wstring map,
	int Width,				// World Dimensions
	int Height);
static void DrawMap(JumpPlayer* player);
static void JumpInput(JumpPlayer* player);
static void ApplyGrivaty(JumpPlayer* player);

//SET_GAME_START(GameStart);
//SET_GAME_LOOP(GameLoop);
//SET_GAME_WINDOW(1920/2,1080/2,WindowMode)

//相机绘图
static float camDepthY = 5.0f;
static float camDepthX = ((float)(surfaceHeight) / (float)(surfaceWidth)) * camDepthY;
//采样频率
static float delta = (2 * camDepthY) / (float)(surfaceHeight);

//地图
static int nMapWidth;
static int nMapHeight;

//人物跳跃
static float fallSpeed = 0.0f;
static float acceration = 20;
static bool isJump = false;

static float playerSizeX;
static float playerSizeY;

static char currentMap[1024];

static JumpPlayer jumpPlayer;

static Uint32 stoneColor[1024] = {
	9212821,7107703,7699325,9015441,8555402,8818061,9015443,10134178,6383464,3159870,8160394,9212053,7699328,8554376,7896966,6975348,8160132,8883599,8094339,7634815,8489610,9410200,4606542,4869967,7634558,7042427,7108221,6647155,5791847,6450039,5594472,6186086,9344407,8949136,7831428,9015443,9015442,8752526,8753043,9871266,6515051,4212815,8950167,7765639,7108482,7699847,7897484,7567742,7896704,8489098,8160388,7569537,8095110,9278868,5264986,3883847,6252651,6844530,7305082,6515052,6251366,5528159,3290684,6317157,7963269,9935516,9804702,9278099,9212307,9410200,9409941,10528166,4738131,4607572,8949906,8160136,7174275,8357260,9278103,6515828,7041394,9606806,8160388,8095109,8555147,8555146,6120808,7766404,8555662,8226185,6580843,7765116,10067871,5067349,3619904,5791327,7306111,9738649,10198685,10132893,10067101,10396065,11185838,8620172,1776930,7831168,10331044,8685964,7305602,8291466,9343637,7699586,8291204,9803927,8489353,8160904,7765890,9213077,4804434,4541006,5594209,5001814,4014405,4212040,5725792,4804176,3224633,4080454,4409677,6711916,7304824,8159362,8422278,8488069,8948619,4343370,2303786,7567740,8883341,8028548,7174789,7042688,8489102,6844277,7501432,9541785,9015184,8883084,9014927,9607578,5528671,6909809,7962497,8883597,8620939,6054757,6976117,9147027,8554633,5133402,5001558,3357505,5989223,6647152,6910326,7173499,7107191,6383722,7435380,5659231,3028025,5067864,6713203,7962755,6843760,4146505,5659485,8028290,9212051,11579567,9803929,6515568,6778225,10067870,9213079,9410201,8752785,8753561,9016477,8358029,9673113,9541529,5857895,5791845,9147545,8096403,8227989,8489100,8752271,8622490,9542044,6975347,4146247,7633272,8423047,9804186,9014926,6316901,4541520,5791842,5790557,6909039,5724765,3224891,6646124,11316908,9738393,9738136,9212823,8950168,8555151,8488840,9015183,9804184,5725794,7831428,9082270,8161425,8226962,8226446,8883598,8226187,8555410,7700098,6646122,9278098,8028809,8686221,8949650,8422790,6317158,9015185,5660000,1843492,6777707,7632503,7830653,11119272,10132378,9803930,9344410,8686735,8685961,9080463,9540758,9409428,5922656,7369589,8687253,7898252,8028809,8094863,8620943,8226185,7897482,6910584,7106415,8488842,7831433,8094603,8291205,8093310,7303794,9015446,7700616,4541002,6317669,8093825,8357253,9014925,8817291,8752271,8358028,8291461,8423048,8489617,9146771,9080461,5132627,6381661,7633533,7503237,7700102,7568516,7569032,7174275,7436930,7633793,7106417,8817035,8423307,8226439,8423046,7764604,7106931,9081751,8029065,4803920,5528155,7172980,8488584,9015185,8291463,8422790,8817804,8883856,8029323,7964303,9278615,9804183,2961460,7041139,7764346,8422536,8094086,8094860,7305606,7240068,7240067,7436159,7369848,8686222,8423304,8489094,8883596,7896963,6449775,9212561,9607322,5461851,5133143,7238516,6514795,9080464,8554377,8093826,8423307,9146772,9081237,8620684,8949132,7567481,3817798,7830912,9802640,9277070,7370362,6778485,7634055,8226190,8423824,7633281,7040625,8095119,8095115,9409425,9081492,7699842,6449258,9672083,10133407,6120293,2895923,7698811,7500917,7895933,7435640,6777708,7238260,7435382,6054242,4803919,4869453,3422781,6581104,5000525,9605778,8884374,7502720,5133401,6383210,7896190,8093827,6777968,4671819,6580331,7369847,8751758,7174788,6318190,5856606,10330271,10067099,6514279,4474953,9277326,9606809,8949651,8423049,8225928,9015186,6843759,6908521,10131862,8685703,9672084,5001298,2764593,4080456,4278092,5594206,7173497,5659744,6448228,7105901,7105900,7303282,7895418,7369847,7764604,6317417,4014921,4803663,10000792,10263963,5263441,5856605,9409428,8357774,8160909,7437958,7240837,8358542,8160134,7435380,8553603,6449002,7435123,5527128,8356739,6514793,4014402,7963008,9475993,6053989,8093827,9606808,9475221,10002338,9804703,8424082,7897223,8291204,8356995,6252138,8949134,8947592,4474442,6844531,8620688,8423307,8226702,7175302,7240581,9213080,8225156,5330007,7172726,6317932,5527383,9146515,9804703,9475479,7961982,9344149,10133151,6250853,6844277,8489102,8094856,8489614,9015186,8489617,7042946,7501946,8291716,6318445,9080978,9079950,5001815,7764862,9014930,8619913,8357256,7831945,7306117,9081755,6119524,5658970,9409945,7766152,8818320,9279388,8555925,9080980,8357257,8225673,10659237,6317416,6186603,8686480,8291978,8620425,8948877,8358547,7765637,7830136,9278611,6449257,8620167,10264992,5791330,6909551,9014412,8488842,8160135,7962759,7700360,6977153,5725280,6646897,7437185,8488326,8424081,8620942,8226700,8226186,8094597,8291978,9540758,5396055,5923429,8555664,8686735,8423305,8029578,7832459,7304827,7830910,9738390,7040880,8883599,11777975,6383208,5462620,9080462,8357774,7897996,7897482,8094603,5857899,6449259,7568515,7503238,8751758,9146773,8818066,8292493,8226701,7569026,7569023,9804184,4934990,4739155,7963783,7963012,7766151,7438214,7108218,6120809,4870741,6975088,5922658,6120552,6975346,4869198,7040878,9212308,8752275,8555152,8686739,8160136,7633276,7371396,7699842,8949392,8357772,8291981,8226188,8160654,8226957,7503234,7503747,9082261,5396313,3751488,6712688,7106931,6581104,5791331,5331295,6581878,6054759,6383465,5922656,5988705,4344138,4278604,8093825,9080205,8751241,8291208,8358031,8094857,8883342,7503240,7765635,9607322,8949911,8226186,8423824,7963531,7569283,7897986,8227726,9016726,5857121,4015437,7239809,7699844,7700615,6450034,6449518,9475995,8686994,8357770,8817545,8686475,8160905,5134685,7041397,9409427,8291206,8225673,8357775,7502463,7371135,7831945,7239031,8555407,8818582,7963531,8686996,8029581,7897734,7569024,9345689,11252914,5659485,3884366,6779518,6844537,6976380,6779258,6712689,8752014,8423048,8357513,8160389,8159875,7700098,5594719,6317929,8883600,8686480,8160654,7897736,7962754,7831688,8029070,7173498,8094856,8028806,8424079,5988965,6383725,6712431,5265243,5396827,7567993,4014918,4871517,6647673,6910589,7173761,6845309,6844275,8949393,8554375,7963013,8160650,8029063,7831938,5265755,3422783,5725537,5922915,7041650,6449771,5067605,6843760,6251626,5593951,7107188,7567739,6909553,7699838,9145741,9146256,8619913,8554632,8356996,4080455,5003364,7108227,7239554,7700101,7238519,6975603,9212306,8685964,8489098,7963526,7897219,7173754,4015690,5594980,7700353,5133397,6777965,7436154,5791328,7634302,6975860,7238515,7107445,6515569,6580589,7569542,10133151,11645360,11251374,10725800,8291208,3488321,3817541,6120556,6581106,6449518,4869969,6909550,9803927,8357259,8291977,8225928,8554634,8225927,7502460,6713973,7766148,5462362,7436411,8357258,8753043,8885143,7897476,8028551,8489613,7239548,6910067,5923432,6712946,6844273,7369845,6843245,5592666,7500659,7237229,6447972,6646123,6712174,5659229,7172721,9803928,8488585,8357257,8620172,8949135,9607320,6580845,8029059,8423560,5330519,7371134,8095114,8094858,8554637,8291979,7371654,8226186,8291462,4212039,8357258,9145999,8488326,8225152,8290688,8948617,9606805,8883084,8948619,10067613,9804185,8422788,4804177,6843502,7962238,8882826,9211534,9343634,7830397,3751234,10198942,10002079,4738384,7633788,8292750,8094858,8357259,8226188,8029324,7831686,7699069,5001813,8160135,10001308,10067100,8949134,8422789,8094082,7634045,7896701,6514536,5330264,7106675,5857124,4475729,5593436,6711658,7040623,7633273,6252138,2895925,3948870,10527394,10659494,4475213,7633015,8686737,7766154,7700617,8225672,8028808,7700359,7172724,5593693,9212823,9409171,8883340,8488840,8159874,9212048,8553602,8883081,7106672,2698287,7896702,8423303,8883338,9935512,9277840,8752010,8817548,8752269,5527900,4343884,11646129,11580080,5132885,8027517,9606809,8685966,8620689,8686739,8029064,8686477,8751240,5198934,7305085,7764860,8817288,8883083,9146256,9277843,9014414,9672857,8158846,4343367,7040879,7237743,7171948,7567221,6185570,4935249,7370105,7238003,3948356,3619906,6252135,5658714,4935249,8949132,8751498,8094600,8225929,7963530,7700357,8291721,7896192,5001813,5527386,6842728,9014154,8817550,9606550,9474966,9739170,8620687,4146249,6053472,8290432,6252654,5726311,6580071,6580329,4474957,5593695,6383724,5001813,7041137,5660260,4409936,4343367,7633274,7963013,7634564,7831685,8028805,7437185,8094857,5857124,5198935,7632504,7105387,9211534,9474963,9409171,9211791,8818838,8489875,3224633,6776939,10330532,8227218,7635341,9146517,9738654,6844792,6975088,10264994,9344149,9804184,9410201,9477283,4672592,7040363,8357257,8029320,8752270,8751754,8160134,7568260,5528420,6646379,
};
static Uint32 grassColor[] =
{

	
	2907452,2445618,2842426,2973756,2643507,2840892,2776119,2974268,2841656,2577972,2710070,2775863,3170876,3039805,2511923,2841400,2709301,2577714,2709813,2973240,3038521,2908731,2643509,2379571,2380339,2577459,2709558,2708022,2643510,2709817,2643509,2710328,2710072,2446386,2841657,2974268,2643509,2709303,2709814,2512691,2776632,2710071,2644534,2910013,3105342,2906169,2578230,2775864,2841915,2776122,2974525,3238209,2840375,2643509,2907964,2709049,2379828,2446132,2709304,2708534,2643253,2776379,2842172,2974782,2842425,2709812,2577200,3039289,2776376,2842423,3104828,2775096,2709302,2776376,2644533,2777145,2841401,2774324,2972475,3106625,2842171,2577460,2974524,2776891,2643767,2773301,2709561,2842171,2842428,2511671,2774841,2775864,2906428,3039806,2711097,2841656,2842425,2709557,2642994,2906935,2972730,2776887,3237185,3037501,2445105,2775353,2708790,2709814,2974013,2775351,3038267,3171135,2908221,2644537,2446129,2578226,2776118,2840629,2840118,2776122,2842427,2578230,2907966,3171909,3171651,2972476,2643509,2643509,2710071,2644019,2906935,2709301,2972475,2709813,2973501,2841148,2511408,2644021,2511154,2973500,3106114,2908480,2973758,3038782,3040834,3238726,2776121,2709812,2841912,2577715,2774069,3170625,2974014,2644024,2907710,3172422,3172932,2974528,2708277,2974271,3106114,2644279,2710073,2445616,2709812,2907705,2908222,2907968,2709814,2776373,2775607,3105344,2972989,2710076,2974017,2841145,2512436,2841917,2775866,2578228,2775610,2710072,2710069,2974011,3237956,2974015,2907964,2643770,2709561,2578997,2511665,3039808,2841916,2313522,2644285,2445877,2578227,2644279,3106368,3238724,2974526,3039549,3040064,2710332,3039294,3039296,3105602,2709303,2644022,3039553,3039552,2709814,2775609,3039295,2907965,2974270,3239493,3041344,2776379,2908477,2973757,2907449,3106366,3171906,2907709,2907453,2841918,2643513,2841146,2709816,3040061,2907706,2907705,2974269,2775610,2708282,2644538,2776122,2577205,2511667,2842167,2907450,3039804,3172673,3173189,3106114,3039551,3039812,3106369,3237441,2907193,
	
	3172419,2907452,3039039,3369799,3039806,2710070,2710072,2776634,2710840,2776122,3039552,3370566,3105855,3171648,2709815,3106113,3435848,2973502,2973757,2907705,
	

};

static void GameStart()
{
	camDepthY = 5.0f;
	camDepthX = ((float)(surfaceHeight) / (float)(surfaceWidth)) * camDepthY;
	//采样频率
	delta = (2 * camDepthY) / (float)(surfaceHeight);

	wstring map;
	map += L"###################";
	map += L"#.................#";
	map += L"#.......####...####";
	map += L"#.................#";
	map += L"#......##.........#";
	map += L"#......##.........#";
	map += L"#.................#";
	map += L"###...............#";
	map += L"##................#";
	map += L"#......######*#####";
	map += L"#......#..........#";
	map += L"#......#..........#";
	map += L"#......*..........#";
	map += L"#......######*#####";
	map += L"#.................#";
	map += L"####*##############";
	map += L"####.........######";
	map += L"#########....######";
	map += L"###################";

	LoadMap(map, 19, 19);

	playerSizeX = (jumpPlayer.w / 2) * delta;
	playerSizeY = (jumpPlayer.h / 2) * delta;

}
static void GameLoop()
{
	//绘制图形
	DrawMap(&jumpPlayer);

	JumpInput(&jumpPlayer);
}

static void LoadMap(
	wstring map,
	int Width,				// World Dimensions
	int Height) {
	nMapWidth = Width;
	nMapHeight = Height;

	//地图加载到缓存里面
	for (int i = 0; i < map.length(); i++)
	{
		currentMap[i] = map[i];
	}

}

static void DrawMap(JumpPlayer* player) {

	for (int x = 0; x < surfaceWidth; x++)
	{

		for (int y = 0; y < surfaceHeight; y++)
		{

			float fTestX = (player->fPlayerX - camDepthX + x * delta) - camDepthY - 1;
			float fTestY = (player->fPlayerY - camDepthY + y * delta);

			int nTestX = (int)(fTestX);
			int nTestY = (int)(fTestY);

			float simpleX = fTestX - (float)nTestX;
			float simpleY = fTestY - (float)nTestY;

			Uint32 color = RED;
			if (nTestX < 0 || nTestX >= nMapWidth || nTestY < 0 || nTestY >= nMapHeight)
			{
				color = BLACK;
			}
			else if (currentMap[nTestY * nMapWidth + nTestX] == '.')
			{
				color = GetSpriteColor(simpleX, simpleY, 32, 32, grassColor);
			}
			else if (currentMap[nTestY * nMapWidth + nTestX] == '*') {
				color = BLUE;
			}
			else {
				color = GetSpriteColor(simpleX, simpleY, 32, 32, stoneColor);
			}

			//绘制玩家
			if (x >= (surfaceWidth / 2 - player->w / 2) && (x <= (surfaceWidth / 2 + player->w / 2)) &&
				(y >= (surfaceHeight / 2 - player->h / 2)) && (y <= (surfaceHeight / 2 + player->h / 2)))
			{
				color = GREEN;
			}
			//绘制角色


			DrawPixel(x, y, color);
		}
	}
}


static bool canJump = true;

static void JumpInput(JumpPlayer* player) {
	//玩家输入

	ApplyGrivaty(player);

	if (GetKeyHold('A'))
	{
		player->fPlayerX -= player->speed * deltaTime;
		if (currentMap[(int)(player->fPlayerX - playerSizeX) + (int)player->fPlayerY * nMapWidth] == '#' ||
			(currentMap[(int)(player->fPlayerX - playerSizeX) + (int)player->fPlayerY * nMapWidth] == '*'))
		{
			player->fPlayerX += player->speed * deltaTime;
		}
	}
	if (GetKeyHold('D'))
	{
		player->fPlayerX += player->speed * deltaTime;
		if (currentMap[(int)(player->fPlayerX + playerSizeX) + (int)player->fPlayerY * nMapWidth] == '#' ||
			(currentMap[(int)(player->fPlayerX + playerSizeX) + (int)player->fPlayerY * nMapWidth] == '*'))
		{
			player->fPlayerX -= player->speed * deltaTime;
		}
	}

	float jumpSpeed = 0;

	//if getkey sp and canJump
	if (GetKeyHold(' ')&&canJump)
	{
		//实现跳跃
		isJump = true;
		printf("Jump\n");
		fallSpeed = 0;
		
		jumpSpeed += acceration * deltaTime * 100;
		player->fPlayerY -= jumpSpeed * deltaTime;
		if (jumpSpeed>10)
		{
			jumpSpeed = 0;
			canJump = false;
			isJump = false;
		}
		//fallSpeed += acceration * deltaTime;
		if (currentMap[(int)player->fPlayerX + (int)(player->fPlayerY - playerSizeY) * nMapWidth] == '#' ||
			(currentMap[(int)player->fPlayerX + (int)(player->fPlayerY - playerSizeY) * nMapWidth] == '*'))
		{
			player->fPlayerY += jumpSpeed * deltaTime;
			jumpSpeed = 0;
			isJump = false;
			canJump = false;
		}
	}
	else {
		isJump = false;
	}

	if (GetKeyHold('L'))
	{
		//和门进行交互
		printf("交互\n");
	}

}

static void ApplyGrivaty(JumpPlayer* player) {

	if (isJump)
	{
		return;
	}
	player->fPlayerY += fallSpeed * deltaTime;
	fallSpeed += acceration * deltaTime;
	canJump = false;
	if (currentMap[((int)player->fPlayerX) + (int)(player->fPlayerY + playerSizeY) * nMapWidth] == '#' ||
		(currentMap[(int)player->fPlayerX + (int)(player->fPlayerY + playerSizeY) * nMapWidth] == '*'))
	{
		player->fPlayerY -= fallSpeed * deltaTime;
		fallSpeed = 0;
		canJump = true;
		//canJump = true;
	}
}

#endif // JUMPMAN